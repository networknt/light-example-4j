
plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    implementation "com.networknt:custom-runtime:$light4jVersion"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.amazonaws:aws-lambda-java-core:$lambdaCoreVersion"
    implementation "com.amazonaws:aws-lambda-java-events:$lambdaEventsVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

test {
    useJUnitPlatform()
}

jar {
  manifest {
    attributes 'Main-Class': 'com.networknt.aws.lambda.Runtime'
  }
}

task buildGraalvmImage {
 inputs.files("${project.projectDir}/src/main", configurations.compileClasspath)
 outputs.upToDateWhen {file("${buildDir}/graalvm/server").exists()}
 outputs.file file("${buildDir}/graalvm/server")

 doLast {
    exec {
      commandLine "bash", "-c", "chmod +x build_graalvm.sh; chmod +x bootstrap; ./build_graalvm.sh"
    }
  }
}

buildGraalvmImage.dependsOn shadowJar, test
build.dependsOn buildGraalvmImage
